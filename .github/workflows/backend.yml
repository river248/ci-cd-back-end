# This is a basic workflow that is manually triggered

name: Github River Backend Pipeline

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: "CI/CD to greet"
        # Default value if no value is explicitly provided
        default: "Backend"
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Send greeting
        run: |
          echo "Hello ${{ inputs.name }}"
          echo "Branch ${GITHUB_REF#refs/heads/}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Working on Backend
        run: echo "I'm working on Backend"
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=river248_ci-cd-github-actions
            -Dsonar.sources=./backend/src
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.cobol.copy.directories=copybooks
            -Dsonar.cobol.file.suffixes=cbl,cpy
            -Dsonar.cobol.copy.suffixes=cpy
            -Dsonar.flex.cobertura.reportPath=coverage-report/coverage-cobertua-flex.xml
            -Dsonar.exclusions=**/__tests__/**,**/mocks/** -Dsonar.pli.marginLeft=2
            -Dsonar.pli.marginRight=0
            -Dsonar.organization=river248
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Installing dependencies...
        working-directory: ./backend
        run: npm ci
      - name: Running unit test...
        working-directory: ./backend
        run: npm run test
      - name: Generate build folder...
        working-directory: ./backend
        run: npm run build --if-present
